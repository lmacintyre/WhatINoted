using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace WhatINoted.Models
{
    /// <summary>
    /// NotebookModel stores information representing a Notebook.
    /// </summary>
    public class NotebookModel
    {
        /// <summary>
        /// Title of the book.
        /// </summary>
        private String _title;

        /// <summary>
        /// Title accessor.
        /// </summary>
        public String Title { get { return _title; } set { _title = value; } }

        /// <summary>
        /// Author of the book.
        /// </summary>
        private String _author;

        /// <summary>
        /// Author accessor.
        /// </summary>
        public String Author { get { return _author; } set { _author = value; } }

        /// <summary>
        /// ISBN of the book.
        /// </summary>
        private IsbnModel _isbn;

        /// <summary>
        /// ISBN accessor.
        /// </summary>
        public IsbnModel Isbn { get { return _isbn; } set { _isbn = value; } }

        /// <summary>
        /// The book's publisher.
        /// </summary>
        private String _publisher;

        /// <summary>
        /// Publisher accessor.
        /// </summary>
        public String Publisher { get { return _publisher; } set { _publisher = value; } }

        /// <summary>
        /// Date the book was published.
        /// </summary>
        private DateTime _publicationDate;

        /// <summary>
        /// Publication date accessor.
        /// </summary>
        public DateTime PublicationDate { get { return _publicationDate; } set { _publicationDate = value; } }

        /// <summary>
        /// List of Notes filed under the book.
        /// </summary>
        private List<NoteModel> _notes;

        /// <summary>
        /// Note list accessor.
        /// </summary>
        public List<NoteModel> Notes { get { return _notes; } set { _notes = value; } }

        /// <summary>
        /// Unique id generated by Firebase.
        /// </summary>
        private String _id;

        /// <summary>
        /// Id accessor.
        /// </summary>
        public String Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// Construct an empty NotebookModel.
        /// </summary>
        public NotebookModel()
        {
            _title = "";
            _author = "";
            _isbn = null;
            _publisher = "";
            _publicationDate = new DateTime();
            _notes = null;
            _id = "";
        }

        /// <summary>
        /// Construct a NotebookModel with the given characteristics.
        /// </summary>
        /// <param name="Title">notebook title</param>
        /// <param name="Author">notebook author</param>
        /// <param name="Isbn">ISBN</param>
        /// <param name="Notes">list of attached notes</param>
        /// <param name="Id">unique firebase id</param>
        public NotebookModel(String Title, String Author, IsbnModel Isbn, String Publisher, DateTime PublicationDate, List<NoteModel> Notes, String Id)
        {
            _title = Title;
            _author = Author;
            _isbn = Isbn;
            _publisher = Publisher;
            _publicationDate = PublicationDate;
            _notes = Notes;
            _id = Id;
        }
        
        public NotebookModel(JsonNotebook jsonNotebook)
        {
            this.Title = jsonNotebook.Title;
            this.Author = jsonNotebook.Author;
            this.Isbn = new IsbnModel(jsonNotebook.ISBN);
        }
        
        /// <summary>
        /// Equality check
        /// </summary>
        /// <param name="obj">other model</param>
        /// <returns>true if models are equal ignoring id and note list</returns>
        public override bool Equals(object obj)
        {
            var model = obj as NotebookModel;
            return model != null &&
                   _title == model._title &&
                   _author == model._author &&
                   _publisher == model._publisher &&
                   _publicationDate == model._publicationDate &&
                   EqualityComparer<IsbnModel>.Default.Equals(_isbn, model._isbn);
        }
    }
}